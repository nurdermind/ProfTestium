// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/useranswerssender.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ProfTestium_TestService {

  /// <summary>Holder for reflection information generated from Protos/useranswerssender.proto</summary>
  public static partial class UseranswerssenderReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/useranswerssender.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UseranswerssenderReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5Qcm90b3MvdXNlcmFuc3dlcnNzZW5kZXIucHJvdG8SBWdyZWV0IjsKFUdl",
            "dFVzZXJBbnN3ZXJzUmVxdWVzdBISCgpRdWVzdGlvbklEGAEgASgFEg4KBlVz",
            "ZXJJRBgCIAEoBSJLCg5BbnN3ZXJWYXJpYW50cxIRCglWYXJpYW50SUQYASAB",
            "KAUSEwoLVmFyaWFudFRleHQYAiABKAkSEQoJSXNDb3JyZWN0GAMgASgIIr8B",
            "ChFVc2VyUXVlc3Rpb25SZXBseRISCgpRdWVzdGlvbklEGAEgASgFEhQKDFF1",
            "ZXN0aW9uVGV4dBgCIAEoCRIQCghNYXhTY29yZRgDIAEoBRIRCglQaWN0dXJl",
            "SUQYBCABKAUSEwoLUGljdHVyZVBhdGgYBSABKAkSKQoKQW5zd2Vyc1ZhchgG",
            "IAMoCzIVLmdyZWV0LkFuc3dlclZhcmlhbnRzEhsKE1VzZXJBc253ZXJWYXJp",
            "YW50SUQYByABKAUiQAoSR2V0VXNlckFuc3dlclJlcGx5EioKCFF1ZXN0aW9u",
            "GAEgASgLMhguZ3JlZXQuVXNlclF1ZXN0aW9uUmVwbHkyXgoRVXNlckFuc3dl",
            "cnNTZW5kZXISSQoOR2V0VXNlckFuc3dlcnMSHC5ncmVldC5HZXRVc2VyQW5z",
            "d2Vyc1JlcXVlc3QaGS5ncmVldC5HZXRVc2VyQW5zd2VyUmVwbHlCGqoCF1By",
            "b2ZUZXN0aXVtX1Rlc3RTZXJ2aWNlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.GetUserAnswersRequest), global::ProfTestium_TestService.GetUserAnswersRequest.Parser, new[]{ "QuestionID", "UserID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.AnswerVariants), global::ProfTestium_TestService.AnswerVariants.Parser, new[]{ "VariantID", "VariantText", "IsCorrect" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.UserQuestionReply), global::ProfTestium_TestService.UserQuestionReply.Parser, new[]{ "QuestionID", "QuestionText", "MaxScore", "PictureID", "PicturePath", "AnswersVar", "UserAsnwerVariantID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.GetUserAnswerReply), global::ProfTestium_TestService.GetUserAnswerReply.Parser, new[]{ "Question" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetUserAnswersRequest : pb::IMessage<GetUserAnswersRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetUserAnswersRequest> _parser = new pb::MessageParser<GetUserAnswersRequest>(() => new GetUserAnswersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserAnswersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.UseranswerssenderReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserAnswersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserAnswersRequest(GetUserAnswersRequest other) : this() {
      questionID_ = other.questionID_;
      userID_ = other.userID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserAnswersRequest Clone() {
      return new GetUserAnswersRequest(this);
    }

    /// <summary>Field number for the "QuestionID" field.</summary>
    public const int QuestionIDFieldNumber = 1;
    private int questionID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QuestionID {
      get { return questionID_; }
      set {
        questionID_ = value;
      }
    }

    /// <summary>Field number for the "UserID" field.</summary>
    public const int UserIDFieldNumber = 2;
    private int userID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserAnswersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserAnswersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QuestionID != other.QuestionID) return false;
      if (UserID != other.UserID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QuestionID != 0) hash ^= QuestionID.GetHashCode();
      if (UserID != 0) hash ^= UserID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (QuestionID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(QuestionID);
      }
      if (UserID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UserID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (QuestionID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(QuestionID);
      }
      if (UserID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UserID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QuestionID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QuestionID);
      }
      if (UserID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserAnswersRequest other) {
      if (other == null) {
        return;
      }
      if (other.QuestionID != 0) {
        QuestionID = other.QuestionID;
      }
      if (other.UserID != 0) {
        UserID = other.UserID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QuestionID = input.ReadInt32();
            break;
          }
          case 16: {
            UserID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            QuestionID = input.ReadInt32();
            break;
          }
          case 16: {
            UserID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AnswerVariants : pb::IMessage<AnswerVariants>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnswerVariants> _parser = new pb::MessageParser<AnswerVariants>(() => new AnswerVariants());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnswerVariants> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.UseranswerssenderReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerVariants() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerVariants(AnswerVariants other) : this() {
      variantID_ = other.variantID_;
      variantText_ = other.variantText_;
      isCorrect_ = other.isCorrect_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerVariants Clone() {
      return new AnswerVariants(this);
    }

    /// <summary>Field number for the "VariantID" field.</summary>
    public const int VariantIDFieldNumber = 1;
    private int variantID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VariantID {
      get { return variantID_; }
      set {
        variantID_ = value;
      }
    }

    /// <summary>Field number for the "VariantText" field.</summary>
    public const int VariantTextFieldNumber = 2;
    private string variantText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VariantText {
      get { return variantText_; }
      set {
        variantText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsCorrect" field.</summary>
    public const int IsCorrectFieldNumber = 3;
    private bool isCorrect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCorrect {
      get { return isCorrect_; }
      set {
        isCorrect_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnswerVariants);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnswerVariants other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VariantID != other.VariantID) return false;
      if (VariantText != other.VariantText) return false;
      if (IsCorrect != other.IsCorrect) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (VariantID != 0) hash ^= VariantID.GetHashCode();
      if (VariantText.Length != 0) hash ^= VariantText.GetHashCode();
      if (IsCorrect != false) hash ^= IsCorrect.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (VariantID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(VariantID);
      }
      if (VariantText.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VariantText);
      }
      if (IsCorrect != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsCorrect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (VariantID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(VariantID);
      }
      if (VariantText.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VariantText);
      }
      if (IsCorrect != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsCorrect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (VariantID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VariantID);
      }
      if (VariantText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VariantText);
      }
      if (IsCorrect != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnswerVariants other) {
      if (other == null) {
        return;
      }
      if (other.VariantID != 0) {
        VariantID = other.VariantID;
      }
      if (other.VariantText.Length != 0) {
        VariantText = other.VariantText;
      }
      if (other.IsCorrect != false) {
        IsCorrect = other.IsCorrect;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            VariantID = input.ReadInt32();
            break;
          }
          case 18: {
            VariantText = input.ReadString();
            break;
          }
          case 24: {
            IsCorrect = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            VariantID = input.ReadInt32();
            break;
          }
          case 18: {
            VariantText = input.ReadString();
            break;
          }
          case 24: {
            IsCorrect = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserQuestionReply : pb::IMessage<UserQuestionReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserQuestionReply> _parser = new pb::MessageParser<UserQuestionReply>(() => new UserQuestionReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserQuestionReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.UseranswerssenderReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserQuestionReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserQuestionReply(UserQuestionReply other) : this() {
      questionID_ = other.questionID_;
      questionText_ = other.questionText_;
      maxScore_ = other.maxScore_;
      pictureID_ = other.pictureID_;
      picturePath_ = other.picturePath_;
      answersVar_ = other.answersVar_.Clone();
      userAsnwerVariantID_ = other.userAsnwerVariantID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserQuestionReply Clone() {
      return new UserQuestionReply(this);
    }

    /// <summary>Field number for the "QuestionID" field.</summary>
    public const int QuestionIDFieldNumber = 1;
    private int questionID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QuestionID {
      get { return questionID_; }
      set {
        questionID_ = value;
      }
    }

    /// <summary>Field number for the "QuestionText" field.</summary>
    public const int QuestionTextFieldNumber = 2;
    private string questionText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QuestionText {
      get { return questionText_; }
      set {
        questionText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MaxScore" field.</summary>
    public const int MaxScoreFieldNumber = 3;
    private int maxScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxScore {
      get { return maxScore_; }
      set {
        maxScore_ = value;
      }
    }

    /// <summary>Field number for the "PictureID" field.</summary>
    public const int PictureIDFieldNumber = 4;
    private int pictureID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PictureID {
      get { return pictureID_; }
      set {
        pictureID_ = value;
      }
    }

    /// <summary>Field number for the "PicturePath" field.</summary>
    public const int PicturePathFieldNumber = 5;
    private string picturePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PicturePath {
      get { return picturePath_; }
      set {
        picturePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AnswersVar" field.</summary>
    public const int AnswersVarFieldNumber = 6;
    private static readonly pb::FieldCodec<global::ProfTestium_TestService.AnswerVariants> _repeated_answersVar_codec
        = pb::FieldCodec.ForMessage(50, global::ProfTestium_TestService.AnswerVariants.Parser);
    private readonly pbc::RepeatedField<global::ProfTestium_TestService.AnswerVariants> answersVar_ = new pbc::RepeatedField<global::ProfTestium_TestService.AnswerVariants>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProfTestium_TestService.AnswerVariants> AnswersVar {
      get { return answersVar_; }
    }

    /// <summary>Field number for the "UserAsnwerVariantID" field.</summary>
    public const int UserAsnwerVariantIDFieldNumber = 7;
    private int userAsnwerVariantID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserAsnwerVariantID {
      get { return userAsnwerVariantID_; }
      set {
        userAsnwerVariantID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserQuestionReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserQuestionReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QuestionID != other.QuestionID) return false;
      if (QuestionText != other.QuestionText) return false;
      if (MaxScore != other.MaxScore) return false;
      if (PictureID != other.PictureID) return false;
      if (PicturePath != other.PicturePath) return false;
      if(!answersVar_.Equals(other.answersVar_)) return false;
      if (UserAsnwerVariantID != other.UserAsnwerVariantID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QuestionID != 0) hash ^= QuestionID.GetHashCode();
      if (QuestionText.Length != 0) hash ^= QuestionText.GetHashCode();
      if (MaxScore != 0) hash ^= MaxScore.GetHashCode();
      if (PictureID != 0) hash ^= PictureID.GetHashCode();
      if (PicturePath.Length != 0) hash ^= PicturePath.GetHashCode();
      hash ^= answersVar_.GetHashCode();
      if (UserAsnwerVariantID != 0) hash ^= UserAsnwerVariantID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (QuestionID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(QuestionID);
      }
      if (QuestionText.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(QuestionText);
      }
      if (MaxScore != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxScore);
      }
      if (PictureID != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PictureID);
      }
      if (PicturePath.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PicturePath);
      }
      answersVar_.WriteTo(output, _repeated_answersVar_codec);
      if (UserAsnwerVariantID != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(UserAsnwerVariantID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (QuestionID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(QuestionID);
      }
      if (QuestionText.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(QuestionText);
      }
      if (MaxScore != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxScore);
      }
      if (PictureID != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PictureID);
      }
      if (PicturePath.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PicturePath);
      }
      answersVar_.WriteTo(ref output, _repeated_answersVar_codec);
      if (UserAsnwerVariantID != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(UserAsnwerVariantID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QuestionID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QuestionID);
      }
      if (QuestionText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QuestionText);
      }
      if (MaxScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxScore);
      }
      if (PictureID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PictureID);
      }
      if (PicturePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PicturePath);
      }
      size += answersVar_.CalculateSize(_repeated_answersVar_codec);
      if (UserAsnwerVariantID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserAsnwerVariantID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserQuestionReply other) {
      if (other == null) {
        return;
      }
      if (other.QuestionID != 0) {
        QuestionID = other.QuestionID;
      }
      if (other.QuestionText.Length != 0) {
        QuestionText = other.QuestionText;
      }
      if (other.MaxScore != 0) {
        MaxScore = other.MaxScore;
      }
      if (other.PictureID != 0) {
        PictureID = other.PictureID;
      }
      if (other.PicturePath.Length != 0) {
        PicturePath = other.PicturePath;
      }
      answersVar_.Add(other.answersVar_);
      if (other.UserAsnwerVariantID != 0) {
        UserAsnwerVariantID = other.UserAsnwerVariantID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QuestionID = input.ReadInt32();
            break;
          }
          case 18: {
            QuestionText = input.ReadString();
            break;
          }
          case 24: {
            MaxScore = input.ReadInt32();
            break;
          }
          case 32: {
            PictureID = input.ReadInt32();
            break;
          }
          case 42: {
            PicturePath = input.ReadString();
            break;
          }
          case 50: {
            answersVar_.AddEntriesFrom(input, _repeated_answersVar_codec);
            break;
          }
          case 56: {
            UserAsnwerVariantID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            QuestionID = input.ReadInt32();
            break;
          }
          case 18: {
            QuestionText = input.ReadString();
            break;
          }
          case 24: {
            MaxScore = input.ReadInt32();
            break;
          }
          case 32: {
            PictureID = input.ReadInt32();
            break;
          }
          case 42: {
            PicturePath = input.ReadString();
            break;
          }
          case 50: {
            answersVar_.AddEntriesFrom(ref input, _repeated_answersVar_codec);
            break;
          }
          case 56: {
            UserAsnwerVariantID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetUserAnswerReply : pb::IMessage<GetUserAnswerReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetUserAnswerReply> _parser = new pb::MessageParser<GetUserAnswerReply>(() => new GetUserAnswerReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserAnswerReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.UseranswerssenderReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserAnswerReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserAnswerReply(GetUserAnswerReply other) : this() {
      question_ = other.question_ != null ? other.question_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserAnswerReply Clone() {
      return new GetUserAnswerReply(this);
    }

    /// <summary>Field number for the "Question" field.</summary>
    public const int QuestionFieldNumber = 1;
    private global::ProfTestium_TestService.UserQuestionReply question_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProfTestium_TestService.UserQuestionReply Question {
      get { return question_; }
      set {
        question_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserAnswerReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserAnswerReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Question, other.Question)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (question_ != null) hash ^= Question.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (question_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Question);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (question_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Question);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (question_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Question);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserAnswerReply other) {
      if (other == null) {
        return;
      }
      if (other.question_ != null) {
        if (question_ == null) {
          Question = new global::ProfTestium_TestService.UserQuestionReply();
        }
        Question.MergeFrom(other.Question);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (question_ == null) {
              Question = new global::ProfTestium_TestService.UserQuestionReply();
            }
            input.ReadMessage(Question);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (question_ == null) {
              Question = new global::ProfTestium_TestService.UserQuestionReply();
            }
            input.ReadMessage(Question);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
