// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/detailtestsender.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ProfTestium_TestService {

  /// <summary>Holder for reflection information generated from Protos/detailtestsender.proto</summary>
  public static partial class DetailtestsenderReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/detailtestsender.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DetailtestsenderReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1Qcm90b3MvZGV0YWlsdGVzdHNlbmRlci5wcm90bxIFZ3JlZXQiKQoXRGV0",
            "YWlsTGlzdFNlbmRlclJlcXVlc3QSDgoGVGVzdElEGAEgASgFIncKDVF1ZXN0",
            "aW9uUmVwbHkSFAoMUXVlc3Rpb25UZXh0GAEgASgJEhYKDlF1ZXN0aW9uVHlw",
            "ZUlEGAIgASgFEhAKCE1heFNjb3JlGAMgASgFEhEKCVBpY3R1cmVJRBgEIAEo",
            "BRITCgtQaWN0dXJlUGF0aBgFIAEoCSJlChNCYW5rT2ZRdWVzdGlvblJlcGx5",
            "EhIKClBvc2l0aW9uSUQYASABKAUSEgoKUXVlc3Rpb25JRBgCIAEoBRImCghR",
            "dWVzdGlvbhgDIAEoCzIULmdyZWV0LlF1ZXN0aW9uUmVwbHkibgoVRGV0YWls",
            "VGVzdFNlbmRlclJlcGx5Eg4KBlRlc3RJRBgBIAEoBRIQCghUZXN0TmFtZRgC",
            "IAEoCRIzCg9CYW5rT2ZRdWVzdGlvbnMYAyADKAsyGi5ncmVldC5CYW5rT2ZR",
            "dWVzdGlvblJlcGx5MmEKEERldGFpbFRlc3RTZW5kZXISTQoNR2V0RGV0YWls",
            "VGVzdBIeLmdyZWV0LkRldGFpbExpc3RTZW5kZXJSZXF1ZXN0GhwuZ3JlZXQu",
            "RGV0YWlsVGVzdFNlbmRlclJlcGx5QhqqAhdQcm9mVGVzdGl1bV9UZXN0U2Vy",
            "dmljZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.DetailListSenderRequest), global::ProfTestium_TestService.DetailListSenderRequest.Parser, new[]{ "TestID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.QuestionReply), global::ProfTestium_TestService.QuestionReply.Parser, new[]{ "QuestionText", "QuestionTypeID", "MaxScore", "PictureID", "PicturePath" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.BankOfQuestionReply), global::ProfTestium_TestService.BankOfQuestionReply.Parser, new[]{ "PositionID", "QuestionID", "Question" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.DetailTestSenderReply), global::ProfTestium_TestService.DetailTestSenderReply.Parser, new[]{ "TestID", "TestName", "BankOfQuestions" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DetailListSenderRequest : pb::IMessage<DetailListSenderRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DetailListSenderRequest> _parser = new pb::MessageParser<DetailListSenderRequest>(() => new DetailListSenderRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DetailListSenderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.DetailtestsenderReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailListSenderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailListSenderRequest(DetailListSenderRequest other) : this() {
      testID_ = other.testID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailListSenderRequest Clone() {
      return new DetailListSenderRequest(this);
    }

    /// <summary>Field number for the "TestID" field.</summary>
    public const int TestIDFieldNumber = 1;
    private int testID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TestID {
      get { return testID_; }
      set {
        testID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DetailListSenderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DetailListSenderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TestID != other.TestID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TestID != 0) hash ^= TestID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TestID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TestID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TestID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TestID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TestID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TestID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DetailListSenderRequest other) {
      if (other == null) {
        return;
      }
      if (other.TestID != 0) {
        TestID = other.TestID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TestID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TestID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class QuestionReply : pb::IMessage<QuestionReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuestionReply> _parser = new pb::MessageParser<QuestionReply>(() => new QuestionReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuestionReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.DetailtestsenderReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestionReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestionReply(QuestionReply other) : this() {
      questionText_ = other.questionText_;
      questionTypeID_ = other.questionTypeID_;
      maxScore_ = other.maxScore_;
      pictureID_ = other.pictureID_;
      picturePath_ = other.picturePath_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestionReply Clone() {
      return new QuestionReply(this);
    }

    /// <summary>Field number for the "QuestionText" field.</summary>
    public const int QuestionTextFieldNumber = 1;
    private string questionText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QuestionText {
      get { return questionText_; }
      set {
        questionText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "QuestionTypeID" field.</summary>
    public const int QuestionTypeIDFieldNumber = 2;
    private int questionTypeID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QuestionTypeID {
      get { return questionTypeID_; }
      set {
        questionTypeID_ = value;
      }
    }

    /// <summary>Field number for the "MaxScore" field.</summary>
    public const int MaxScoreFieldNumber = 3;
    private int maxScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxScore {
      get { return maxScore_; }
      set {
        maxScore_ = value;
      }
    }

    /// <summary>Field number for the "PictureID" field.</summary>
    public const int PictureIDFieldNumber = 4;
    private int pictureID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PictureID {
      get { return pictureID_; }
      set {
        pictureID_ = value;
      }
    }

    /// <summary>Field number for the "PicturePath" field.</summary>
    public const int PicturePathFieldNumber = 5;
    private string picturePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PicturePath {
      get { return picturePath_; }
      set {
        picturePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuestionReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuestionReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QuestionText != other.QuestionText) return false;
      if (QuestionTypeID != other.QuestionTypeID) return false;
      if (MaxScore != other.MaxScore) return false;
      if (PictureID != other.PictureID) return false;
      if (PicturePath != other.PicturePath) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QuestionText.Length != 0) hash ^= QuestionText.GetHashCode();
      if (QuestionTypeID != 0) hash ^= QuestionTypeID.GetHashCode();
      if (MaxScore != 0) hash ^= MaxScore.GetHashCode();
      if (PictureID != 0) hash ^= PictureID.GetHashCode();
      if (PicturePath.Length != 0) hash ^= PicturePath.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (QuestionText.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(QuestionText);
      }
      if (QuestionTypeID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(QuestionTypeID);
      }
      if (MaxScore != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxScore);
      }
      if (PictureID != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PictureID);
      }
      if (PicturePath.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PicturePath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (QuestionText.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(QuestionText);
      }
      if (QuestionTypeID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(QuestionTypeID);
      }
      if (MaxScore != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxScore);
      }
      if (PictureID != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PictureID);
      }
      if (PicturePath.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PicturePath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QuestionText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QuestionText);
      }
      if (QuestionTypeID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QuestionTypeID);
      }
      if (MaxScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxScore);
      }
      if (PictureID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PictureID);
      }
      if (PicturePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PicturePath);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuestionReply other) {
      if (other == null) {
        return;
      }
      if (other.QuestionText.Length != 0) {
        QuestionText = other.QuestionText;
      }
      if (other.QuestionTypeID != 0) {
        QuestionTypeID = other.QuestionTypeID;
      }
      if (other.MaxScore != 0) {
        MaxScore = other.MaxScore;
      }
      if (other.PictureID != 0) {
        PictureID = other.PictureID;
      }
      if (other.PicturePath.Length != 0) {
        PicturePath = other.PicturePath;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            QuestionText = input.ReadString();
            break;
          }
          case 16: {
            QuestionTypeID = input.ReadInt32();
            break;
          }
          case 24: {
            MaxScore = input.ReadInt32();
            break;
          }
          case 32: {
            PictureID = input.ReadInt32();
            break;
          }
          case 42: {
            PicturePath = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            QuestionText = input.ReadString();
            break;
          }
          case 16: {
            QuestionTypeID = input.ReadInt32();
            break;
          }
          case 24: {
            MaxScore = input.ReadInt32();
            break;
          }
          case 32: {
            PictureID = input.ReadInt32();
            break;
          }
          case 42: {
            PicturePath = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BankOfQuestionReply : pb::IMessage<BankOfQuestionReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BankOfQuestionReply> _parser = new pb::MessageParser<BankOfQuestionReply>(() => new BankOfQuestionReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BankOfQuestionReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.DetailtestsenderReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BankOfQuestionReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BankOfQuestionReply(BankOfQuestionReply other) : this() {
      positionID_ = other.positionID_;
      questionID_ = other.questionID_;
      question_ = other.question_ != null ? other.question_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BankOfQuestionReply Clone() {
      return new BankOfQuestionReply(this);
    }

    /// <summary>Field number for the "PositionID" field.</summary>
    public const int PositionIDFieldNumber = 1;
    private int positionID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PositionID {
      get { return positionID_; }
      set {
        positionID_ = value;
      }
    }

    /// <summary>Field number for the "QuestionID" field.</summary>
    public const int QuestionIDFieldNumber = 2;
    private int questionID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QuestionID {
      get { return questionID_; }
      set {
        questionID_ = value;
      }
    }

    /// <summary>Field number for the "Question" field.</summary>
    public const int QuestionFieldNumber = 3;
    private global::ProfTestium_TestService.QuestionReply question_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProfTestium_TestService.QuestionReply Question {
      get { return question_; }
      set {
        question_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BankOfQuestionReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BankOfQuestionReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PositionID != other.PositionID) return false;
      if (QuestionID != other.QuestionID) return false;
      if (!object.Equals(Question, other.Question)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PositionID != 0) hash ^= PositionID.GetHashCode();
      if (QuestionID != 0) hash ^= QuestionID.GetHashCode();
      if (question_ != null) hash ^= Question.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PositionID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PositionID);
      }
      if (QuestionID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(QuestionID);
      }
      if (question_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Question);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PositionID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PositionID);
      }
      if (QuestionID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(QuestionID);
      }
      if (question_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Question);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PositionID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PositionID);
      }
      if (QuestionID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QuestionID);
      }
      if (question_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Question);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BankOfQuestionReply other) {
      if (other == null) {
        return;
      }
      if (other.PositionID != 0) {
        PositionID = other.PositionID;
      }
      if (other.QuestionID != 0) {
        QuestionID = other.QuestionID;
      }
      if (other.question_ != null) {
        if (question_ == null) {
          Question = new global::ProfTestium_TestService.QuestionReply();
        }
        Question.MergeFrom(other.Question);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PositionID = input.ReadInt32();
            break;
          }
          case 16: {
            QuestionID = input.ReadInt32();
            break;
          }
          case 26: {
            if (question_ == null) {
              Question = new global::ProfTestium_TestService.QuestionReply();
            }
            input.ReadMessage(Question);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PositionID = input.ReadInt32();
            break;
          }
          case 16: {
            QuestionID = input.ReadInt32();
            break;
          }
          case 26: {
            if (question_ == null) {
              Question = new global::ProfTestium_TestService.QuestionReply();
            }
            input.ReadMessage(Question);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DetailTestSenderReply : pb::IMessage<DetailTestSenderReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DetailTestSenderReply> _parser = new pb::MessageParser<DetailTestSenderReply>(() => new DetailTestSenderReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DetailTestSenderReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.DetailtestsenderReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailTestSenderReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailTestSenderReply(DetailTestSenderReply other) : this() {
      testID_ = other.testID_;
      testName_ = other.testName_;
      bankOfQuestions_ = other.bankOfQuestions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailTestSenderReply Clone() {
      return new DetailTestSenderReply(this);
    }

    /// <summary>Field number for the "TestID" field.</summary>
    public const int TestIDFieldNumber = 1;
    private int testID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TestID {
      get { return testID_; }
      set {
        testID_ = value;
      }
    }

    /// <summary>Field number for the "TestName" field.</summary>
    public const int TestNameFieldNumber = 2;
    private string testName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TestName {
      get { return testName_; }
      set {
        testName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BankOfQuestions" field.</summary>
    public const int BankOfQuestionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ProfTestium_TestService.BankOfQuestionReply> _repeated_bankOfQuestions_codec
        = pb::FieldCodec.ForMessage(26, global::ProfTestium_TestService.BankOfQuestionReply.Parser);
    private readonly pbc::RepeatedField<global::ProfTestium_TestService.BankOfQuestionReply> bankOfQuestions_ = new pbc::RepeatedField<global::ProfTestium_TestService.BankOfQuestionReply>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProfTestium_TestService.BankOfQuestionReply> BankOfQuestions {
      get { return bankOfQuestions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DetailTestSenderReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DetailTestSenderReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TestID != other.TestID) return false;
      if (TestName != other.TestName) return false;
      if(!bankOfQuestions_.Equals(other.bankOfQuestions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TestID != 0) hash ^= TestID.GetHashCode();
      if (TestName.Length != 0) hash ^= TestName.GetHashCode();
      hash ^= bankOfQuestions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TestID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TestID);
      }
      if (TestName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TestName);
      }
      bankOfQuestions_.WriteTo(output, _repeated_bankOfQuestions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TestID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TestID);
      }
      if (TestName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TestName);
      }
      bankOfQuestions_.WriteTo(ref output, _repeated_bankOfQuestions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TestID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TestID);
      }
      if (TestName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TestName);
      }
      size += bankOfQuestions_.CalculateSize(_repeated_bankOfQuestions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DetailTestSenderReply other) {
      if (other == null) {
        return;
      }
      if (other.TestID != 0) {
        TestID = other.TestID;
      }
      if (other.TestName.Length != 0) {
        TestName = other.TestName;
      }
      bankOfQuestions_.Add(other.bankOfQuestions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TestID = input.ReadInt32();
            break;
          }
          case 18: {
            TestName = input.ReadString();
            break;
          }
          case 26: {
            bankOfQuestions_.AddEntriesFrom(input, _repeated_bankOfQuestions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TestID = input.ReadInt32();
            break;
          }
          case 18: {
            TestName = input.ReadString();
            break;
          }
          case 26: {
            bankOfQuestions_.AddEntriesFrom(ref input, _repeated_bankOfQuestions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
