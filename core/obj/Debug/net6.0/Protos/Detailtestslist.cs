// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/detailtestslist.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ProfTestium_TestService {

  /// <summary>Holder for reflection information generated from Protos/detailtestslist.proto</summary>
  public static partial class DetailtestslistReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/detailtestslist.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DetailtestslistReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxQcm90b3MvZGV0YWlsdGVzdHNsaXN0LnByb3RvEgVncmVldCIpChdHZXRR",
            "dWVzdGlvbnNMaXN0UmVxdWVzdBIOCgZUZXN0SUQYASABKAUiNQojR2V0T3Bl",
            "blF1ZXN0aW9uQW5zd2Vyc09mVXNlclJlcXVlc3QSDgoGVXNlcklEGAEgASgF",
            "IjsKJUdldFZhcmlhbnRzQW5zd2FyZU9mQ2xvc2VUeXBlUXVlc3Rpb24SEgoK",
            "UXVlc3Rpb25JRBgBIAEoBSI2ChJRdWVzdGlvbnNUeXBlUmVwbHkSDgoGVHlw",
            "ZUlEGAEgASgFEhAKCFR5cGVOYW1lGAIgASgJIjYKDFBpY3R1cmVSZXBseRIR",
            "CglQaWN0dXJlSUQYASABKAUSEwoLUGF0aFBpY3R1cmUYAiABKAkijQEKF09w",
            "ZW5RdWVzdGlvbkFuc3dlclJlcGx5EhAKCEFuc3dlcklEGAEgASgFEhYKDlVz",
            "ZXJBbnN3ZXJUZXh0GAIgASgJEhUKDUNvcnJlY3RBbnN3ZXIYAyABKAkSDgoG",
            "VXNlcklEGAQgASgFEg0KBVNjb3JlGAUgASgFEhIKClF1ZXN0aW9uSUQYBiAB",
            "KAUibAoYQ2xvc2VRdWVzdGlvbkFuc3dlclJlcGx5EhQKDENvZGVvZkFuc3dl",
            "chgBIAEoBRIRCglJc0NvcnJlY3QYAiABKAgSEgoKUXVlc3Rpb25JRBgDIAEo",
            "BRITCgtUZXh0VmFyaWFudBgEIAEoCSKpAQoUUXVlc3Rpb25FbGVtZW50UmVw",
            "bHkSEgoKUXVlc3Rpb25JRBgBIAEoBRIUCgxRdWVzdGlvblRleHQYAiABKAkS",
            "EAoITWF4U2NvcmUYAyABKAUSLwoMVHlwZVF1ZXN0aW9uGAQgASgLMhkuZ3Jl",
            "ZXQuUXVlc3Rpb25zVHlwZVJlcGx5EiQKB1BpY3R1cmUYBSABKAsyEy5ncmVl",
            "dC5QaWN0dXJlUmVwbHkiRwoVR2V0UXVlc3Rpb25zTGlzdFJlcGx5Ei4KCVF1",
            "ZXN0aW9ucxgBIAMoCzIbLmdyZWV0LlF1ZXN0aW9uRWxlbWVudFJlcGx5Il4K",
            "I0dldENsb3NlVmFyaWFudHNRdWVzdGlvbkFuc3dlclJlcGx5EjcKDkNsb3Nl",
            "UXVlc3Rpb25zGAEgAygLMh8uZ3JlZXQuQ2xvc2VRdWVzdGlvbkFuc3dlclJl",
            "cGx5IlMKGkdldE9wZW5RdWVzdGlvbkFuc3dlclJlcGx5EjUKDU9wZW5RdWVz",
            "dGlvbnMYASADKAsyHi5ncmVldC5PcGVuUXVlc3Rpb25BbnN3ZXJSZXBseTLF",
            "AgoVRGV0YWlsVGVzdHNMaXN0U2VuZGVyElAKEEdldFF1ZXN0aW9uc0xpc3QS",
            "Hi5ncmVldC5HZXRRdWVzdGlvbnNMaXN0UmVxdWVzdBocLmdyZWV0LkdldFF1",
            "ZXN0aW9uc0xpc3RSZXBseRJmChVHZXRPcGVuUXVlc3Rpb25BbnN3ZXISKi5n",
            "cmVldC5HZXRPcGVuUXVlc3Rpb25BbnN3ZXJzT2ZVc2VyUmVxdWVzdBohLmdy",
            "ZWV0LkdldE9wZW5RdWVzdGlvbkFuc3dlclJlcGx5EnIKFkdldENsb3NlUXVl",
            "c3Rpb25BbnN3ZXISLC5ncmVldC5HZXRWYXJpYW50c0Fuc3dhcmVPZkNsb3Nl",
            "VHlwZVF1ZXN0aW9uGiouZ3JlZXQuR2V0Q2xvc2VWYXJpYW50c1F1ZXN0aW9u",
            "QW5zd2VyUmVwbHlCGqoCF1Byb2ZUZXN0aXVtX1Rlc3RTZXJ2aWNlYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.GetQuestionsListRequest), global::ProfTestium_TestService.GetQuestionsListRequest.Parser, new[]{ "TestID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.GetOpenQuestionAnswersOfUserRequest), global::ProfTestium_TestService.GetOpenQuestionAnswersOfUserRequest.Parser, new[]{ "UserID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.GetVariantsAnswareOfCloseTypeQuestion), global::ProfTestium_TestService.GetVariantsAnswareOfCloseTypeQuestion.Parser, new[]{ "QuestionID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.QuestionsTypeReply), global::ProfTestium_TestService.QuestionsTypeReply.Parser, new[]{ "TypeID", "TypeName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.PictureReply), global::ProfTestium_TestService.PictureReply.Parser, new[]{ "PictureID", "PathPicture" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.OpenQuestionAnswerReply), global::ProfTestium_TestService.OpenQuestionAnswerReply.Parser, new[]{ "AnswerID", "UserAnswerText", "CorrectAnswer", "UserID", "Score", "QuestionID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.CloseQuestionAnswerReply), global::ProfTestium_TestService.CloseQuestionAnswerReply.Parser, new[]{ "CodeofAnswer", "IsCorrect", "QuestionID", "TextVariant" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.QuestionElementReply), global::ProfTestium_TestService.QuestionElementReply.Parser, new[]{ "QuestionID", "QuestionText", "MaxScore", "TypeQuestion", "Picture" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.GetQuestionsListReply), global::ProfTestium_TestService.GetQuestionsListReply.Parser, new[]{ "Questions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.GetCloseVariantsQuestionAnswerReply), global::ProfTestium_TestService.GetCloseVariantsQuestionAnswerReply.Parser, new[]{ "CloseQuestions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.GetOpenQuestionAnswerReply), global::ProfTestium_TestService.GetOpenQuestionAnswerReply.Parser, new[]{ "OpenQuestions" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetQuestionsListRequest : pb::IMessage<GetQuestionsListRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetQuestionsListRequest> _parser = new pb::MessageParser<GetQuestionsListRequest>(() => new GetQuestionsListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetQuestionsListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.DetailtestslistReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQuestionsListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQuestionsListRequest(GetQuestionsListRequest other) : this() {
      testID_ = other.testID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQuestionsListRequest Clone() {
      return new GetQuestionsListRequest(this);
    }

    /// <summary>Field number for the "TestID" field.</summary>
    public const int TestIDFieldNumber = 1;
    private int testID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TestID {
      get { return testID_; }
      set {
        testID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetQuestionsListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetQuestionsListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TestID != other.TestID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TestID != 0) hash ^= TestID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TestID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TestID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TestID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TestID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TestID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TestID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetQuestionsListRequest other) {
      if (other == null) {
        return;
      }
      if (other.TestID != 0) {
        TestID = other.TestID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TestID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TestID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetOpenQuestionAnswersOfUserRequest : pb::IMessage<GetOpenQuestionAnswersOfUserRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetOpenQuestionAnswersOfUserRequest> _parser = new pb::MessageParser<GetOpenQuestionAnswersOfUserRequest>(() => new GetOpenQuestionAnswersOfUserRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetOpenQuestionAnswersOfUserRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.DetailtestslistReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOpenQuestionAnswersOfUserRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOpenQuestionAnswersOfUserRequest(GetOpenQuestionAnswersOfUserRequest other) : this() {
      userID_ = other.userID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOpenQuestionAnswersOfUserRequest Clone() {
      return new GetOpenQuestionAnswersOfUserRequest(this);
    }

    /// <summary>Field number for the "UserID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private int userID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetOpenQuestionAnswersOfUserRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetOpenQuestionAnswersOfUserRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID != 0) hash ^= UserID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetOpenQuestionAnswersOfUserRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserID != 0) {
        UserID = other.UserID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UserID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetVariantsAnswareOfCloseTypeQuestion : pb::IMessage<GetVariantsAnswareOfCloseTypeQuestion>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetVariantsAnswareOfCloseTypeQuestion> _parser = new pb::MessageParser<GetVariantsAnswareOfCloseTypeQuestion>(() => new GetVariantsAnswareOfCloseTypeQuestion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetVariantsAnswareOfCloseTypeQuestion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.DetailtestslistReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVariantsAnswareOfCloseTypeQuestion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVariantsAnswareOfCloseTypeQuestion(GetVariantsAnswareOfCloseTypeQuestion other) : this() {
      questionID_ = other.questionID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVariantsAnswareOfCloseTypeQuestion Clone() {
      return new GetVariantsAnswareOfCloseTypeQuestion(this);
    }

    /// <summary>Field number for the "QuestionID" field.</summary>
    public const int QuestionIDFieldNumber = 1;
    private int questionID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QuestionID {
      get { return questionID_; }
      set {
        questionID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetVariantsAnswareOfCloseTypeQuestion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetVariantsAnswareOfCloseTypeQuestion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QuestionID != other.QuestionID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QuestionID != 0) hash ^= QuestionID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (QuestionID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(QuestionID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (QuestionID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(QuestionID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QuestionID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QuestionID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetVariantsAnswareOfCloseTypeQuestion other) {
      if (other == null) {
        return;
      }
      if (other.QuestionID != 0) {
        QuestionID = other.QuestionID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QuestionID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            QuestionID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class QuestionsTypeReply : pb::IMessage<QuestionsTypeReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuestionsTypeReply> _parser = new pb::MessageParser<QuestionsTypeReply>(() => new QuestionsTypeReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuestionsTypeReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.DetailtestslistReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestionsTypeReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestionsTypeReply(QuestionsTypeReply other) : this() {
      typeID_ = other.typeID_;
      typeName_ = other.typeName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestionsTypeReply Clone() {
      return new QuestionsTypeReply(this);
    }

    /// <summary>Field number for the "TypeID" field.</summary>
    public const int TypeIDFieldNumber = 1;
    private int typeID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TypeID {
      get { return typeID_; }
      set {
        typeID_ = value;
      }
    }

    /// <summary>Field number for the "TypeName" field.</summary>
    public const int TypeNameFieldNumber = 2;
    private string typeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TypeName {
      get { return typeName_; }
      set {
        typeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuestionsTypeReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuestionsTypeReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TypeID != other.TypeID) return false;
      if (TypeName != other.TypeName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TypeID != 0) hash ^= TypeID.GetHashCode();
      if (TypeName.Length != 0) hash ^= TypeName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TypeID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TypeID);
      }
      if (TypeName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TypeName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TypeID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TypeID);
      }
      if (TypeName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TypeName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TypeID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TypeID);
      }
      if (TypeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuestionsTypeReply other) {
      if (other == null) {
        return;
      }
      if (other.TypeID != 0) {
        TypeID = other.TypeID;
      }
      if (other.TypeName.Length != 0) {
        TypeName = other.TypeName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TypeID = input.ReadInt32();
            break;
          }
          case 18: {
            TypeName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TypeID = input.ReadInt32();
            break;
          }
          case 18: {
            TypeName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PictureReply : pb::IMessage<PictureReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PictureReply> _parser = new pb::MessageParser<PictureReply>(() => new PictureReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PictureReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.DetailtestslistReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PictureReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PictureReply(PictureReply other) : this() {
      pictureID_ = other.pictureID_;
      pathPicture_ = other.pathPicture_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PictureReply Clone() {
      return new PictureReply(this);
    }

    /// <summary>Field number for the "PictureID" field.</summary>
    public const int PictureIDFieldNumber = 1;
    private int pictureID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PictureID {
      get { return pictureID_; }
      set {
        pictureID_ = value;
      }
    }

    /// <summary>Field number for the "PathPicture" field.</summary>
    public const int PathPictureFieldNumber = 2;
    private string pathPicture_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PathPicture {
      get { return pathPicture_; }
      set {
        pathPicture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PictureReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PictureReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PictureID != other.PictureID) return false;
      if (PathPicture != other.PathPicture) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PictureID != 0) hash ^= PictureID.GetHashCode();
      if (PathPicture.Length != 0) hash ^= PathPicture.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PictureID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PictureID);
      }
      if (PathPicture.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PathPicture);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PictureID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PictureID);
      }
      if (PathPicture.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PathPicture);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PictureID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PictureID);
      }
      if (PathPicture.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PathPicture);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PictureReply other) {
      if (other == null) {
        return;
      }
      if (other.PictureID != 0) {
        PictureID = other.PictureID;
      }
      if (other.PathPicture.Length != 0) {
        PathPicture = other.PathPicture;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PictureID = input.ReadInt32();
            break;
          }
          case 18: {
            PathPicture = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PictureID = input.ReadInt32();
            break;
          }
          case 18: {
            PathPicture = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OpenQuestionAnswerReply : pb::IMessage<OpenQuestionAnswerReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OpenQuestionAnswerReply> _parser = new pb::MessageParser<OpenQuestionAnswerReply>(() => new OpenQuestionAnswerReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OpenQuestionAnswerReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.DetailtestslistReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenQuestionAnswerReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenQuestionAnswerReply(OpenQuestionAnswerReply other) : this() {
      answerID_ = other.answerID_;
      userAnswerText_ = other.userAnswerText_;
      correctAnswer_ = other.correctAnswer_;
      userID_ = other.userID_;
      score_ = other.score_;
      questionID_ = other.questionID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenQuestionAnswerReply Clone() {
      return new OpenQuestionAnswerReply(this);
    }

    /// <summary>Field number for the "AnswerID" field.</summary>
    public const int AnswerIDFieldNumber = 1;
    private int answerID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AnswerID {
      get { return answerID_; }
      set {
        answerID_ = value;
      }
    }

    /// <summary>Field number for the "UserAnswerText" field.</summary>
    public const int UserAnswerTextFieldNumber = 2;
    private string userAnswerText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserAnswerText {
      get { return userAnswerText_; }
      set {
        userAnswerText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CorrectAnswer" field.</summary>
    public const int CorrectAnswerFieldNumber = 3;
    private string correctAnswer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CorrectAnswer {
      get { return correctAnswer_; }
      set {
        correctAnswer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UserID" field.</summary>
    public const int UserIDFieldNumber = 4;
    private int userID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    /// <summary>Field number for the "Score" field.</summary>
    public const int ScoreFieldNumber = 5;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "QuestionID" field.</summary>
    public const int QuestionIDFieldNumber = 6;
    private int questionID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QuestionID {
      get { return questionID_; }
      set {
        questionID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OpenQuestionAnswerReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OpenQuestionAnswerReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AnswerID != other.AnswerID) return false;
      if (UserAnswerText != other.UserAnswerText) return false;
      if (CorrectAnswer != other.CorrectAnswer) return false;
      if (UserID != other.UserID) return false;
      if (Score != other.Score) return false;
      if (QuestionID != other.QuestionID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AnswerID != 0) hash ^= AnswerID.GetHashCode();
      if (UserAnswerText.Length != 0) hash ^= UserAnswerText.GetHashCode();
      if (CorrectAnswer.Length != 0) hash ^= CorrectAnswer.GetHashCode();
      if (UserID != 0) hash ^= UserID.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (QuestionID != 0) hash ^= QuestionID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AnswerID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AnswerID);
      }
      if (UserAnswerText.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserAnswerText);
      }
      if (CorrectAnswer.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CorrectAnswer);
      }
      if (UserID != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UserID);
      }
      if (Score != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Score);
      }
      if (QuestionID != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(QuestionID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AnswerID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AnswerID);
      }
      if (UserAnswerText.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserAnswerText);
      }
      if (CorrectAnswer.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CorrectAnswer);
      }
      if (UserID != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UserID);
      }
      if (Score != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Score);
      }
      if (QuestionID != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(QuestionID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AnswerID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AnswerID);
      }
      if (UserAnswerText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserAnswerText);
      }
      if (CorrectAnswer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CorrectAnswer);
      }
      if (UserID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserID);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (QuestionID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QuestionID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OpenQuestionAnswerReply other) {
      if (other == null) {
        return;
      }
      if (other.AnswerID != 0) {
        AnswerID = other.AnswerID;
      }
      if (other.UserAnswerText.Length != 0) {
        UserAnswerText = other.UserAnswerText;
      }
      if (other.CorrectAnswer.Length != 0) {
        CorrectAnswer = other.CorrectAnswer;
      }
      if (other.UserID != 0) {
        UserID = other.UserID;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.QuestionID != 0) {
        QuestionID = other.QuestionID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AnswerID = input.ReadInt32();
            break;
          }
          case 18: {
            UserAnswerText = input.ReadString();
            break;
          }
          case 26: {
            CorrectAnswer = input.ReadString();
            break;
          }
          case 32: {
            UserID = input.ReadInt32();
            break;
          }
          case 40: {
            Score = input.ReadInt32();
            break;
          }
          case 48: {
            QuestionID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AnswerID = input.ReadInt32();
            break;
          }
          case 18: {
            UserAnswerText = input.ReadString();
            break;
          }
          case 26: {
            CorrectAnswer = input.ReadString();
            break;
          }
          case 32: {
            UserID = input.ReadInt32();
            break;
          }
          case 40: {
            Score = input.ReadInt32();
            break;
          }
          case 48: {
            QuestionID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CloseQuestionAnswerReply : pb::IMessage<CloseQuestionAnswerReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CloseQuestionAnswerReply> _parser = new pb::MessageParser<CloseQuestionAnswerReply>(() => new CloseQuestionAnswerReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CloseQuestionAnswerReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.DetailtestslistReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseQuestionAnswerReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseQuestionAnswerReply(CloseQuestionAnswerReply other) : this() {
      codeofAnswer_ = other.codeofAnswer_;
      isCorrect_ = other.isCorrect_;
      questionID_ = other.questionID_;
      textVariant_ = other.textVariant_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseQuestionAnswerReply Clone() {
      return new CloseQuestionAnswerReply(this);
    }

    /// <summary>Field number for the "CodeofAnswer" field.</summary>
    public const int CodeofAnswerFieldNumber = 1;
    private int codeofAnswer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CodeofAnswer {
      get { return codeofAnswer_; }
      set {
        codeofAnswer_ = value;
      }
    }

    /// <summary>Field number for the "IsCorrect" field.</summary>
    public const int IsCorrectFieldNumber = 2;
    private bool isCorrect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCorrect {
      get { return isCorrect_; }
      set {
        isCorrect_ = value;
      }
    }

    /// <summary>Field number for the "QuestionID" field.</summary>
    public const int QuestionIDFieldNumber = 3;
    private int questionID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QuestionID {
      get { return questionID_; }
      set {
        questionID_ = value;
      }
    }

    /// <summary>Field number for the "TextVariant" field.</summary>
    public const int TextVariantFieldNumber = 4;
    private string textVariant_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TextVariant {
      get { return textVariant_; }
      set {
        textVariant_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CloseQuestionAnswerReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CloseQuestionAnswerReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CodeofAnswer != other.CodeofAnswer) return false;
      if (IsCorrect != other.IsCorrect) return false;
      if (QuestionID != other.QuestionID) return false;
      if (TextVariant != other.TextVariant) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CodeofAnswer != 0) hash ^= CodeofAnswer.GetHashCode();
      if (IsCorrect != false) hash ^= IsCorrect.GetHashCode();
      if (QuestionID != 0) hash ^= QuestionID.GetHashCode();
      if (TextVariant.Length != 0) hash ^= TextVariant.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CodeofAnswer != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CodeofAnswer);
      }
      if (IsCorrect != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsCorrect);
      }
      if (QuestionID != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(QuestionID);
      }
      if (TextVariant.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TextVariant);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CodeofAnswer != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CodeofAnswer);
      }
      if (IsCorrect != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsCorrect);
      }
      if (QuestionID != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(QuestionID);
      }
      if (TextVariant.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TextVariant);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CodeofAnswer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CodeofAnswer);
      }
      if (IsCorrect != false) {
        size += 1 + 1;
      }
      if (QuestionID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QuestionID);
      }
      if (TextVariant.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextVariant);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CloseQuestionAnswerReply other) {
      if (other == null) {
        return;
      }
      if (other.CodeofAnswer != 0) {
        CodeofAnswer = other.CodeofAnswer;
      }
      if (other.IsCorrect != false) {
        IsCorrect = other.IsCorrect;
      }
      if (other.QuestionID != 0) {
        QuestionID = other.QuestionID;
      }
      if (other.TextVariant.Length != 0) {
        TextVariant = other.TextVariant;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CodeofAnswer = input.ReadInt32();
            break;
          }
          case 16: {
            IsCorrect = input.ReadBool();
            break;
          }
          case 24: {
            QuestionID = input.ReadInt32();
            break;
          }
          case 34: {
            TextVariant = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CodeofAnswer = input.ReadInt32();
            break;
          }
          case 16: {
            IsCorrect = input.ReadBool();
            break;
          }
          case 24: {
            QuestionID = input.ReadInt32();
            break;
          }
          case 34: {
            TextVariant = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class QuestionElementReply : pb::IMessage<QuestionElementReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuestionElementReply> _parser = new pb::MessageParser<QuestionElementReply>(() => new QuestionElementReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuestionElementReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.DetailtestslistReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestionElementReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestionElementReply(QuestionElementReply other) : this() {
      questionID_ = other.questionID_;
      questionText_ = other.questionText_;
      maxScore_ = other.maxScore_;
      typeQuestion_ = other.typeQuestion_ != null ? other.typeQuestion_.Clone() : null;
      picture_ = other.picture_ != null ? other.picture_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestionElementReply Clone() {
      return new QuestionElementReply(this);
    }

    /// <summary>Field number for the "QuestionID" field.</summary>
    public const int QuestionIDFieldNumber = 1;
    private int questionID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QuestionID {
      get { return questionID_; }
      set {
        questionID_ = value;
      }
    }

    /// <summary>Field number for the "QuestionText" field.</summary>
    public const int QuestionTextFieldNumber = 2;
    private string questionText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QuestionText {
      get { return questionText_; }
      set {
        questionText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MaxScore" field.</summary>
    public const int MaxScoreFieldNumber = 3;
    private int maxScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxScore {
      get { return maxScore_; }
      set {
        maxScore_ = value;
      }
    }

    /// <summary>Field number for the "TypeQuestion" field.</summary>
    public const int TypeQuestionFieldNumber = 4;
    private global::ProfTestium_TestService.QuestionsTypeReply typeQuestion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProfTestium_TestService.QuestionsTypeReply TypeQuestion {
      get { return typeQuestion_; }
      set {
        typeQuestion_ = value;
      }
    }

    /// <summary>Field number for the "Picture" field.</summary>
    public const int PictureFieldNumber = 5;
    private global::ProfTestium_TestService.PictureReply picture_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProfTestium_TestService.PictureReply Picture {
      get { return picture_; }
      set {
        picture_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuestionElementReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuestionElementReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QuestionID != other.QuestionID) return false;
      if (QuestionText != other.QuestionText) return false;
      if (MaxScore != other.MaxScore) return false;
      if (!object.Equals(TypeQuestion, other.TypeQuestion)) return false;
      if (!object.Equals(Picture, other.Picture)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QuestionID != 0) hash ^= QuestionID.GetHashCode();
      if (QuestionText.Length != 0) hash ^= QuestionText.GetHashCode();
      if (MaxScore != 0) hash ^= MaxScore.GetHashCode();
      if (typeQuestion_ != null) hash ^= TypeQuestion.GetHashCode();
      if (picture_ != null) hash ^= Picture.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (QuestionID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(QuestionID);
      }
      if (QuestionText.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(QuestionText);
      }
      if (MaxScore != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxScore);
      }
      if (typeQuestion_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TypeQuestion);
      }
      if (picture_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Picture);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (QuestionID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(QuestionID);
      }
      if (QuestionText.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(QuestionText);
      }
      if (MaxScore != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxScore);
      }
      if (typeQuestion_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TypeQuestion);
      }
      if (picture_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Picture);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QuestionID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QuestionID);
      }
      if (QuestionText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QuestionText);
      }
      if (MaxScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxScore);
      }
      if (typeQuestion_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypeQuestion);
      }
      if (picture_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Picture);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuestionElementReply other) {
      if (other == null) {
        return;
      }
      if (other.QuestionID != 0) {
        QuestionID = other.QuestionID;
      }
      if (other.QuestionText.Length != 0) {
        QuestionText = other.QuestionText;
      }
      if (other.MaxScore != 0) {
        MaxScore = other.MaxScore;
      }
      if (other.typeQuestion_ != null) {
        if (typeQuestion_ == null) {
          TypeQuestion = new global::ProfTestium_TestService.QuestionsTypeReply();
        }
        TypeQuestion.MergeFrom(other.TypeQuestion);
      }
      if (other.picture_ != null) {
        if (picture_ == null) {
          Picture = new global::ProfTestium_TestService.PictureReply();
        }
        Picture.MergeFrom(other.Picture);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QuestionID = input.ReadInt32();
            break;
          }
          case 18: {
            QuestionText = input.ReadString();
            break;
          }
          case 24: {
            MaxScore = input.ReadInt32();
            break;
          }
          case 34: {
            if (typeQuestion_ == null) {
              TypeQuestion = new global::ProfTestium_TestService.QuestionsTypeReply();
            }
            input.ReadMessage(TypeQuestion);
            break;
          }
          case 42: {
            if (picture_ == null) {
              Picture = new global::ProfTestium_TestService.PictureReply();
            }
            input.ReadMessage(Picture);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            QuestionID = input.ReadInt32();
            break;
          }
          case 18: {
            QuestionText = input.ReadString();
            break;
          }
          case 24: {
            MaxScore = input.ReadInt32();
            break;
          }
          case 34: {
            if (typeQuestion_ == null) {
              TypeQuestion = new global::ProfTestium_TestService.QuestionsTypeReply();
            }
            input.ReadMessage(TypeQuestion);
            break;
          }
          case 42: {
            if (picture_ == null) {
              Picture = new global::ProfTestium_TestService.PictureReply();
            }
            input.ReadMessage(Picture);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetQuestionsListReply : pb::IMessage<GetQuestionsListReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetQuestionsListReply> _parser = new pb::MessageParser<GetQuestionsListReply>(() => new GetQuestionsListReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetQuestionsListReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.DetailtestslistReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQuestionsListReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQuestionsListReply(GetQuestionsListReply other) : this() {
      questions_ = other.questions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetQuestionsListReply Clone() {
      return new GetQuestionsListReply(this);
    }

    /// <summary>Field number for the "Questions" field.</summary>
    public const int QuestionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ProfTestium_TestService.QuestionElementReply> _repeated_questions_codec
        = pb::FieldCodec.ForMessage(10, global::ProfTestium_TestService.QuestionElementReply.Parser);
    private readonly pbc::RepeatedField<global::ProfTestium_TestService.QuestionElementReply> questions_ = new pbc::RepeatedField<global::ProfTestium_TestService.QuestionElementReply>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProfTestium_TestService.QuestionElementReply> Questions {
      get { return questions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetQuestionsListReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetQuestionsListReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!questions_.Equals(other.questions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= questions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      questions_.WriteTo(output, _repeated_questions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      questions_.WriteTo(ref output, _repeated_questions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += questions_.CalculateSize(_repeated_questions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetQuestionsListReply other) {
      if (other == null) {
        return;
      }
      questions_.Add(other.questions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            questions_.AddEntriesFrom(input, _repeated_questions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            questions_.AddEntriesFrom(ref input, _repeated_questions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetCloseVariantsQuestionAnswerReply : pb::IMessage<GetCloseVariantsQuestionAnswerReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetCloseVariantsQuestionAnswerReply> _parser = new pb::MessageParser<GetCloseVariantsQuestionAnswerReply>(() => new GetCloseVariantsQuestionAnswerReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCloseVariantsQuestionAnswerReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.DetailtestslistReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCloseVariantsQuestionAnswerReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCloseVariantsQuestionAnswerReply(GetCloseVariantsQuestionAnswerReply other) : this() {
      closeQuestions_ = other.closeQuestions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCloseVariantsQuestionAnswerReply Clone() {
      return new GetCloseVariantsQuestionAnswerReply(this);
    }

    /// <summary>Field number for the "CloseQuestions" field.</summary>
    public const int CloseQuestionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ProfTestium_TestService.CloseQuestionAnswerReply> _repeated_closeQuestions_codec
        = pb::FieldCodec.ForMessage(10, global::ProfTestium_TestService.CloseQuestionAnswerReply.Parser);
    private readonly pbc::RepeatedField<global::ProfTestium_TestService.CloseQuestionAnswerReply> closeQuestions_ = new pbc::RepeatedField<global::ProfTestium_TestService.CloseQuestionAnswerReply>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProfTestium_TestService.CloseQuestionAnswerReply> CloseQuestions {
      get { return closeQuestions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCloseVariantsQuestionAnswerReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCloseVariantsQuestionAnswerReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!closeQuestions_.Equals(other.closeQuestions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= closeQuestions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      closeQuestions_.WriteTo(output, _repeated_closeQuestions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      closeQuestions_.WriteTo(ref output, _repeated_closeQuestions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += closeQuestions_.CalculateSize(_repeated_closeQuestions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCloseVariantsQuestionAnswerReply other) {
      if (other == null) {
        return;
      }
      closeQuestions_.Add(other.closeQuestions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            closeQuestions_.AddEntriesFrom(input, _repeated_closeQuestions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            closeQuestions_.AddEntriesFrom(ref input, _repeated_closeQuestions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetOpenQuestionAnswerReply : pb::IMessage<GetOpenQuestionAnswerReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetOpenQuestionAnswerReply> _parser = new pb::MessageParser<GetOpenQuestionAnswerReply>(() => new GetOpenQuestionAnswerReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetOpenQuestionAnswerReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.DetailtestslistReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOpenQuestionAnswerReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOpenQuestionAnswerReply(GetOpenQuestionAnswerReply other) : this() {
      openQuestions_ = other.openQuestions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOpenQuestionAnswerReply Clone() {
      return new GetOpenQuestionAnswerReply(this);
    }

    /// <summary>Field number for the "OpenQuestions" field.</summary>
    public const int OpenQuestionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ProfTestium_TestService.OpenQuestionAnswerReply> _repeated_openQuestions_codec
        = pb::FieldCodec.ForMessage(10, global::ProfTestium_TestService.OpenQuestionAnswerReply.Parser);
    private readonly pbc::RepeatedField<global::ProfTestium_TestService.OpenQuestionAnswerReply> openQuestions_ = new pbc::RepeatedField<global::ProfTestium_TestService.OpenQuestionAnswerReply>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProfTestium_TestService.OpenQuestionAnswerReply> OpenQuestions {
      get { return openQuestions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetOpenQuestionAnswerReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetOpenQuestionAnswerReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!openQuestions_.Equals(other.openQuestions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= openQuestions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      openQuestions_.WriteTo(output, _repeated_openQuestions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      openQuestions_.WriteTo(ref output, _repeated_openQuestions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += openQuestions_.CalculateSize(_repeated_openQuestions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetOpenQuestionAnswerReply other) {
      if (other == null) {
        return;
      }
      openQuestions_.Add(other.openQuestions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            openQuestions_.AddEntriesFrom(input, _repeated_openQuestions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            openQuestions_.AddEntriesFrom(ref input, _repeated_openQuestions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
