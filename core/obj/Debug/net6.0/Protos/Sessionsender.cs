// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/sessionsender.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ProfTestium_TestService {

  /// <summary>Holder for reflection information generated from Protos/sessionsender.proto</summary>
  public static partial class SessionsenderReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/sessionsender.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SessionsenderReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpQcm90b3Mvc2Vzc2lvbnNlbmRlci5wcm90bxIFZ3JlZXQaHmdvb2dsZS9w",
            "cm90b2J1Zi9kdXJhdGlvbi5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVz",
            "dGFtcC5wcm90byImChRTZXNzaW9uU2VuZGVyUmVxdWVzdBIOCgZVc2VySUQY",
            "ASABKAUiNAoQVGVzdHNTZW5kZXJSZXBseRIOCgZUZXN0SUQYASABKAUSEAoI",
            "VGVzdE5hbWUYAiABKAkiuwIKC1Nlc3Npb25Vc2VyEhEKCXNlc3Npb25JRBgB",
            "IAEoBRIxChBUZXN0c3NlbmRlclJlcGx5GAIgASgLMhcuZ3JlZXQuVGVzdHNT",
            "ZW5kZXJSZXBseRIvCgtTZXNzaW9uRGF0ZRgDIAEoCzIaLmdvb2dsZS5wcm90",
            "b2J1Zi5UaW1lc3RhbXASLAoJRHVyYXRpb25zGAQgASgLMhkuZ29vZ2xlLnBy",
            "b3RvYnVmLkR1cmF0aW9uEhQKDElzU3VjY2Vzc2Z1bBgFIAEoCBIVCg1GYWls",
            "dXJlUmVhc29uGAYgASgJEhIKClNlc3Npb25VcmwYByABKAkSDQoFU2NvcmUY",
            "CCABKAUSEAoITWF4U2NvcmUYCSABKAUSFgoOQ29ycmVjdHBlcmNlbnQYCiAB",
            "KAUSDQoFTWFya3MYCyABKAkiOgoSU2Vzc2lvblNlbmRlclJlcGx5EiQKCHNl",
            "c3Npb25zGAEgAygLMhIuZ3JlZXQuU2Vzc2lvblVzZXIyWQoNU2Vzc2lvblNl",
            "bmRlchJICg5HZXRTZXNzaW9uTGlzdBIbLmdyZWV0LlNlc3Npb25TZW5kZXJS",
            "ZXF1ZXN0GhkuZ3JlZXQuU2Vzc2lvblNlbmRlclJlcGx5QhqqAhdQcm9mVGVz",
            "dGl1bV9UZXN0U2VydmljZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.SessionSenderRequest), global::ProfTestium_TestService.SessionSenderRequest.Parser, new[]{ "UserID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.TestsSenderReply), global::ProfTestium_TestService.TestsSenderReply.Parser, new[]{ "TestID", "TestName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.SessionUser), global::ProfTestium_TestService.SessionUser.Parser, new[]{ "SessionID", "TestssenderReply", "SessionDate", "Durations", "IsSuccessful", "FailureReason", "SessionUrl", "Score", "MaxScore", "Correctpercent", "Marks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.SessionSenderReply), global::ProfTestium_TestService.SessionSenderReply.Parser, new[]{ "Sessions" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SessionSenderRequest : pb::IMessage<SessionSenderRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SessionSenderRequest> _parser = new pb::MessageParser<SessionSenderRequest>(() => new SessionSenderRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SessionSenderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.SessionsenderReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionSenderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionSenderRequest(SessionSenderRequest other) : this() {
      userID_ = other.userID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionSenderRequest Clone() {
      return new SessionSenderRequest(this);
    }

    /// <summary>Field number for the "UserID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private int userID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SessionSenderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SessionSenderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID != 0) hash ^= UserID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SessionSenderRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserID != 0) {
        UserID = other.UserID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UserID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TestsSenderReply : pb::IMessage<TestsSenderReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TestsSenderReply> _parser = new pb::MessageParser<TestsSenderReply>(() => new TestsSenderReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestsSenderReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.SessionsenderReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestsSenderReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestsSenderReply(TestsSenderReply other) : this() {
      testID_ = other.testID_;
      testName_ = other.testName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestsSenderReply Clone() {
      return new TestsSenderReply(this);
    }

    /// <summary>Field number for the "TestID" field.</summary>
    public const int TestIDFieldNumber = 1;
    private int testID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TestID {
      get { return testID_; }
      set {
        testID_ = value;
      }
    }

    /// <summary>Field number for the "TestName" field.</summary>
    public const int TestNameFieldNumber = 2;
    private string testName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TestName {
      get { return testName_; }
      set {
        testName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestsSenderReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestsSenderReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TestID != other.TestID) return false;
      if (TestName != other.TestName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TestID != 0) hash ^= TestID.GetHashCode();
      if (TestName.Length != 0) hash ^= TestName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TestID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TestID);
      }
      if (TestName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TestName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TestID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TestID);
      }
      if (TestName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TestName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TestID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TestID);
      }
      if (TestName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TestName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestsSenderReply other) {
      if (other == null) {
        return;
      }
      if (other.TestID != 0) {
        TestID = other.TestID;
      }
      if (other.TestName.Length != 0) {
        TestName = other.TestName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TestID = input.ReadInt32();
            break;
          }
          case 18: {
            TestName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TestID = input.ReadInt32();
            break;
          }
          case 18: {
            TestName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SessionUser : pb::IMessage<SessionUser>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SessionUser> _parser = new pb::MessageParser<SessionUser>(() => new SessionUser());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SessionUser> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.SessionsenderReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionUser() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionUser(SessionUser other) : this() {
      sessionID_ = other.sessionID_;
      testssenderReply_ = other.testssenderReply_ != null ? other.testssenderReply_.Clone() : null;
      sessionDate_ = other.sessionDate_ != null ? other.sessionDate_.Clone() : null;
      durations_ = other.durations_ != null ? other.durations_.Clone() : null;
      isSuccessful_ = other.isSuccessful_;
      failureReason_ = other.failureReason_;
      sessionUrl_ = other.sessionUrl_;
      score_ = other.score_;
      maxScore_ = other.maxScore_;
      correctpercent_ = other.correctpercent_;
      marks_ = other.marks_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionUser Clone() {
      return new SessionUser(this);
    }

    /// <summary>Field number for the "sessionID" field.</summary>
    public const int SessionIDFieldNumber = 1;
    private int sessionID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SessionID {
      get { return sessionID_; }
      set {
        sessionID_ = value;
      }
    }

    /// <summary>Field number for the "TestssenderReply" field.</summary>
    public const int TestssenderReplyFieldNumber = 2;
    private global::ProfTestium_TestService.TestsSenderReply testssenderReply_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProfTestium_TestService.TestsSenderReply TestssenderReply {
      get { return testssenderReply_; }
      set {
        testssenderReply_ = value;
      }
    }

    /// <summary>Field number for the "SessionDate" field.</summary>
    public const int SessionDateFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp sessionDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp SessionDate {
      get { return sessionDate_; }
      set {
        sessionDate_ = value;
      }
    }

    /// <summary>Field number for the "Durations" field.</summary>
    public const int DurationsFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Duration durations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration Durations {
      get { return durations_; }
      set {
        durations_ = value;
      }
    }

    /// <summary>Field number for the "IsSuccessful" field.</summary>
    public const int IsSuccessfulFieldNumber = 5;
    private bool isSuccessful_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSuccessful {
      get { return isSuccessful_; }
      set {
        isSuccessful_ = value;
      }
    }

    /// <summary>Field number for the "FailureReason" field.</summary>
    public const int FailureReasonFieldNumber = 6;
    private string failureReason_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FailureReason {
      get { return failureReason_; }
      set {
        failureReason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionUrl" field.</summary>
    public const int SessionUrlFieldNumber = 7;
    private string sessionUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionUrl {
      get { return sessionUrl_; }
      set {
        sessionUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Score" field.</summary>
    public const int ScoreFieldNumber = 8;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "MaxScore" field.</summary>
    public const int MaxScoreFieldNumber = 9;
    private int maxScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxScore {
      get { return maxScore_; }
      set {
        maxScore_ = value;
      }
    }

    /// <summary>Field number for the "Correctpercent" field.</summary>
    public const int CorrectpercentFieldNumber = 10;
    private int correctpercent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Correctpercent {
      get { return correctpercent_; }
      set {
        correctpercent_ = value;
      }
    }

    /// <summary>Field number for the "Marks" field.</summary>
    public const int MarksFieldNumber = 11;
    private string marks_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Marks {
      get { return marks_; }
      set {
        marks_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SessionUser);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SessionUser other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionID != other.SessionID) return false;
      if (!object.Equals(TestssenderReply, other.TestssenderReply)) return false;
      if (!object.Equals(SessionDate, other.SessionDate)) return false;
      if (!object.Equals(Durations, other.Durations)) return false;
      if (IsSuccessful != other.IsSuccessful) return false;
      if (FailureReason != other.FailureReason) return false;
      if (SessionUrl != other.SessionUrl) return false;
      if (Score != other.Score) return false;
      if (MaxScore != other.MaxScore) return false;
      if (Correctpercent != other.Correctpercent) return false;
      if (Marks != other.Marks) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionID != 0) hash ^= SessionID.GetHashCode();
      if (testssenderReply_ != null) hash ^= TestssenderReply.GetHashCode();
      if (sessionDate_ != null) hash ^= SessionDate.GetHashCode();
      if (durations_ != null) hash ^= Durations.GetHashCode();
      if (IsSuccessful != false) hash ^= IsSuccessful.GetHashCode();
      if (FailureReason.Length != 0) hash ^= FailureReason.GetHashCode();
      if (SessionUrl.Length != 0) hash ^= SessionUrl.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (MaxScore != 0) hash ^= MaxScore.GetHashCode();
      if (Correctpercent != 0) hash ^= Correctpercent.GetHashCode();
      if (Marks.Length != 0) hash ^= Marks.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SessionID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SessionID);
      }
      if (testssenderReply_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TestssenderReply);
      }
      if (sessionDate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SessionDate);
      }
      if (durations_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Durations);
      }
      if (IsSuccessful != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsSuccessful);
      }
      if (FailureReason.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(FailureReason);
      }
      if (SessionUrl.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SessionUrl);
      }
      if (Score != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Score);
      }
      if (MaxScore != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(MaxScore);
      }
      if (Correctpercent != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Correctpercent);
      }
      if (Marks.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Marks);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SessionID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SessionID);
      }
      if (testssenderReply_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TestssenderReply);
      }
      if (sessionDate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SessionDate);
      }
      if (durations_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Durations);
      }
      if (IsSuccessful != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsSuccessful);
      }
      if (FailureReason.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(FailureReason);
      }
      if (SessionUrl.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SessionUrl);
      }
      if (Score != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Score);
      }
      if (MaxScore != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(MaxScore);
      }
      if (Correctpercent != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Correctpercent);
      }
      if (Marks.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Marks);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionID);
      }
      if (testssenderReply_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TestssenderReply);
      }
      if (sessionDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SessionDate);
      }
      if (durations_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Durations);
      }
      if (IsSuccessful != false) {
        size += 1 + 1;
      }
      if (FailureReason.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FailureReason);
      }
      if (SessionUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionUrl);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (MaxScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxScore);
      }
      if (Correctpercent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Correctpercent);
      }
      if (Marks.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Marks);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SessionUser other) {
      if (other == null) {
        return;
      }
      if (other.SessionID != 0) {
        SessionID = other.SessionID;
      }
      if (other.testssenderReply_ != null) {
        if (testssenderReply_ == null) {
          TestssenderReply = new global::ProfTestium_TestService.TestsSenderReply();
        }
        TestssenderReply.MergeFrom(other.TestssenderReply);
      }
      if (other.sessionDate_ != null) {
        if (sessionDate_ == null) {
          SessionDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        SessionDate.MergeFrom(other.SessionDate);
      }
      if (other.durations_ != null) {
        if (durations_ == null) {
          Durations = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Durations.MergeFrom(other.Durations);
      }
      if (other.IsSuccessful != false) {
        IsSuccessful = other.IsSuccessful;
      }
      if (other.FailureReason.Length != 0) {
        FailureReason = other.FailureReason;
      }
      if (other.SessionUrl.Length != 0) {
        SessionUrl = other.SessionUrl;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.MaxScore != 0) {
        MaxScore = other.MaxScore;
      }
      if (other.Correctpercent != 0) {
        Correctpercent = other.Correctpercent;
      }
      if (other.Marks.Length != 0) {
        Marks = other.Marks;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SessionID = input.ReadInt32();
            break;
          }
          case 18: {
            if (testssenderReply_ == null) {
              TestssenderReply = new global::ProfTestium_TestService.TestsSenderReply();
            }
            input.ReadMessage(TestssenderReply);
            break;
          }
          case 26: {
            if (sessionDate_ == null) {
              SessionDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SessionDate);
            break;
          }
          case 34: {
            if (durations_ == null) {
              Durations = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Durations);
            break;
          }
          case 40: {
            IsSuccessful = input.ReadBool();
            break;
          }
          case 50: {
            FailureReason = input.ReadString();
            break;
          }
          case 58: {
            SessionUrl = input.ReadString();
            break;
          }
          case 64: {
            Score = input.ReadInt32();
            break;
          }
          case 72: {
            MaxScore = input.ReadInt32();
            break;
          }
          case 80: {
            Correctpercent = input.ReadInt32();
            break;
          }
          case 90: {
            Marks = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SessionID = input.ReadInt32();
            break;
          }
          case 18: {
            if (testssenderReply_ == null) {
              TestssenderReply = new global::ProfTestium_TestService.TestsSenderReply();
            }
            input.ReadMessage(TestssenderReply);
            break;
          }
          case 26: {
            if (sessionDate_ == null) {
              SessionDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SessionDate);
            break;
          }
          case 34: {
            if (durations_ == null) {
              Durations = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Durations);
            break;
          }
          case 40: {
            IsSuccessful = input.ReadBool();
            break;
          }
          case 50: {
            FailureReason = input.ReadString();
            break;
          }
          case 58: {
            SessionUrl = input.ReadString();
            break;
          }
          case 64: {
            Score = input.ReadInt32();
            break;
          }
          case 72: {
            MaxScore = input.ReadInt32();
            break;
          }
          case 80: {
            Correctpercent = input.ReadInt32();
            break;
          }
          case 90: {
            Marks = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SessionSenderReply : pb::IMessage<SessionSenderReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SessionSenderReply> _parser = new pb::MessageParser<SessionSenderReply>(() => new SessionSenderReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SessionSenderReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.SessionsenderReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionSenderReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionSenderReply(SessionSenderReply other) : this() {
      sessions_ = other.sessions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionSenderReply Clone() {
      return new SessionSenderReply(this);
    }

    /// <summary>Field number for the "sessions" field.</summary>
    public const int SessionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ProfTestium_TestService.SessionUser> _repeated_sessions_codec
        = pb::FieldCodec.ForMessage(10, global::ProfTestium_TestService.SessionUser.Parser);
    private readonly pbc::RepeatedField<global::ProfTestium_TestService.SessionUser> sessions_ = new pbc::RepeatedField<global::ProfTestium_TestService.SessionUser>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProfTestium_TestService.SessionUser> Sessions {
      get { return sessions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SessionSenderReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SessionSenderReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sessions_.Equals(other.sessions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sessions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      sessions_.WriteTo(output, _repeated_sessions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      sessions_.WriteTo(ref output, _repeated_sessions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += sessions_.CalculateSize(_repeated_sessions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SessionSenderReply other) {
      if (other == null) {
        return;
      }
      sessions_.Add(other.sessions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            sessions_.AddEntriesFrom(input, _repeated_sessions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            sessions_.AddEntriesFrom(ref input, _repeated_sessions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
