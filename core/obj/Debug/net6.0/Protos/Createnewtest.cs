// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/createnewtest.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ProfTestium_TestService {

  /// <summary>Holder for reflection information generated from Protos/createnewtest.proto</summary>
  public static partial class CreatenewtestReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/createnewtest.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CreatenewtestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpQcm90b3MvY3JlYXRlbmV3dGVzdC5wcm90bxIFZ3JlZXQiNQoLQW5zd2Vy",
            "UmVwbHkSEwoLVmFyaWFudFRleHQYASABKAkSEQoJaXNDb3JyZWN0GAIgASgI",
            "IqABCg9RdWVzdGlvblJlcXVlc3QSFAoMUXVlc3Rpb25UZXh0GAEgASgJEhQK",
            "DFF1ZXN0aW9uVHlwZRgCIAEoBRIQCghNYXhTY29yZRgDIAEoBRITCgtQaWN0",
            "dXJlUGF0aBgEIAEoCRIjCgdBbnN3ZXJzGAUgAygLMhIuZ3JlZXQuQW5zd2Vy",
            "UmVwbHkSFQoNQ29ycmVjdEFuc3dlchgGIAEoCSJQChFDcmVhdGVUZXN0UmVx",
            "dWVzdBIQCghUZXN0TmFtZRgBIAEoCRIpCglxdWVzdGlvbnMYAiADKAsyFi5n",
            "cmVldC5RdWVzdGlvblJlcXVlc3QiMgoPQ3JlYXRlVGVzdFJlcGx5EhEKCWlz",
            "U3VjY2VzcxgBIAEoCRIMCgRjb2RlGAIgASgFIiMKEURlbGV0ZVRlc3RSZXF1",
            "ZXN0Eg4KBlRlc3RJRBgBIAEoBSIyCg9EZWxldGVUZXN0UmVwbHkSEQoJaXNT",
            "dWNjZXNzGAEgASgJEgwKBGNvZGUYAiABKAUymAEKFkNyZWF0ZURlbGV0ZUNo",
            "YW5nZVRlc3QSPgoKQ3JlYXRlVGVzdBIYLmdyZWV0LkNyZWF0ZVRlc3RSZXF1",
            "ZXN0GhYuZ3JlZXQuQ3JlYXRlVGVzdFJlcGx5Ej4KCkRlbGV0ZVRlc3QSGC5n",
            "cmVldC5EZWxldGVUZXN0UmVxdWVzdBoWLmdyZWV0LkRlbGV0ZVRlc3RSZXBs",
            "eUIaqgIXUHJvZlRlc3RpdW1fVGVzdFNlcnZpY2ViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.AnswerReply), global::ProfTestium_TestService.AnswerReply.Parser, new[]{ "VariantText", "IsCorrect" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.QuestionRequest), global::ProfTestium_TestService.QuestionRequest.Parser, new[]{ "QuestionText", "QuestionType", "MaxScore", "PicturePath", "Answers", "CorrectAnswer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.CreateTestRequest), global::ProfTestium_TestService.CreateTestRequest.Parser, new[]{ "TestName", "Questions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.CreateTestReply), global::ProfTestium_TestService.CreateTestReply.Parser, new[]{ "IsSuccess", "Code" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.DeleteTestRequest), global::ProfTestium_TestService.DeleteTestRequest.Parser, new[]{ "TestID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProfTestium_TestService.DeleteTestReply), global::ProfTestium_TestService.DeleteTestReply.Parser, new[]{ "IsSuccess", "Code" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AnswerReply : pb::IMessage<AnswerReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnswerReply> _parser = new pb::MessageParser<AnswerReply>(() => new AnswerReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnswerReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.CreatenewtestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerReply(AnswerReply other) : this() {
      variantText_ = other.variantText_;
      isCorrect_ = other.isCorrect_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerReply Clone() {
      return new AnswerReply(this);
    }

    /// <summary>Field number for the "VariantText" field.</summary>
    public const int VariantTextFieldNumber = 1;
    private string variantText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VariantText {
      get { return variantText_; }
      set {
        variantText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isCorrect" field.</summary>
    public const int IsCorrectFieldNumber = 2;
    private bool isCorrect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCorrect {
      get { return isCorrect_; }
      set {
        isCorrect_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnswerReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnswerReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VariantText != other.VariantText) return false;
      if (IsCorrect != other.IsCorrect) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (VariantText.Length != 0) hash ^= VariantText.GetHashCode();
      if (IsCorrect != false) hash ^= IsCorrect.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (VariantText.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VariantText);
      }
      if (IsCorrect != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsCorrect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (VariantText.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VariantText);
      }
      if (IsCorrect != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsCorrect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (VariantText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VariantText);
      }
      if (IsCorrect != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnswerReply other) {
      if (other == null) {
        return;
      }
      if (other.VariantText.Length != 0) {
        VariantText = other.VariantText;
      }
      if (other.IsCorrect != false) {
        IsCorrect = other.IsCorrect;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            VariantText = input.ReadString();
            break;
          }
          case 16: {
            IsCorrect = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            VariantText = input.ReadString();
            break;
          }
          case 16: {
            IsCorrect = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class QuestionRequest : pb::IMessage<QuestionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuestionRequest> _parser = new pb::MessageParser<QuestionRequest>(() => new QuestionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuestionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.CreatenewtestReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestionRequest(QuestionRequest other) : this() {
      questionText_ = other.questionText_;
      questionType_ = other.questionType_;
      maxScore_ = other.maxScore_;
      picturePath_ = other.picturePath_;
      answers_ = other.answers_.Clone();
      correctAnswer_ = other.correctAnswer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuestionRequest Clone() {
      return new QuestionRequest(this);
    }

    /// <summary>Field number for the "QuestionText" field.</summary>
    public const int QuestionTextFieldNumber = 1;
    private string questionText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QuestionText {
      get { return questionText_; }
      set {
        questionText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "QuestionType" field.</summary>
    public const int QuestionTypeFieldNumber = 2;
    private int questionType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int QuestionType {
      get { return questionType_; }
      set {
        questionType_ = value;
      }
    }

    /// <summary>Field number for the "MaxScore" field.</summary>
    public const int MaxScoreFieldNumber = 3;
    private int maxScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxScore {
      get { return maxScore_; }
      set {
        maxScore_ = value;
      }
    }

    /// <summary>Field number for the "PicturePath" field.</summary>
    public const int PicturePathFieldNumber = 4;
    private string picturePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PicturePath {
      get { return picturePath_; }
      set {
        picturePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Answers" field.</summary>
    public const int AnswersFieldNumber = 5;
    private static readonly pb::FieldCodec<global::ProfTestium_TestService.AnswerReply> _repeated_answers_codec
        = pb::FieldCodec.ForMessage(42, global::ProfTestium_TestService.AnswerReply.Parser);
    private readonly pbc::RepeatedField<global::ProfTestium_TestService.AnswerReply> answers_ = new pbc::RepeatedField<global::ProfTestium_TestService.AnswerReply>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProfTestium_TestService.AnswerReply> Answers {
      get { return answers_; }
    }

    /// <summary>Field number for the "CorrectAnswer" field.</summary>
    public const int CorrectAnswerFieldNumber = 6;
    private string correctAnswer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CorrectAnswer {
      get { return correctAnswer_; }
      set {
        correctAnswer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuestionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuestionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QuestionText != other.QuestionText) return false;
      if (QuestionType != other.QuestionType) return false;
      if (MaxScore != other.MaxScore) return false;
      if (PicturePath != other.PicturePath) return false;
      if(!answers_.Equals(other.answers_)) return false;
      if (CorrectAnswer != other.CorrectAnswer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QuestionText.Length != 0) hash ^= QuestionText.GetHashCode();
      if (QuestionType != 0) hash ^= QuestionType.GetHashCode();
      if (MaxScore != 0) hash ^= MaxScore.GetHashCode();
      if (PicturePath.Length != 0) hash ^= PicturePath.GetHashCode();
      hash ^= answers_.GetHashCode();
      if (CorrectAnswer.Length != 0) hash ^= CorrectAnswer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (QuestionText.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(QuestionText);
      }
      if (QuestionType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(QuestionType);
      }
      if (MaxScore != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxScore);
      }
      if (PicturePath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PicturePath);
      }
      answers_.WriteTo(output, _repeated_answers_codec);
      if (CorrectAnswer.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CorrectAnswer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (QuestionText.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(QuestionText);
      }
      if (QuestionType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(QuestionType);
      }
      if (MaxScore != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxScore);
      }
      if (PicturePath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PicturePath);
      }
      answers_.WriteTo(ref output, _repeated_answers_codec);
      if (CorrectAnswer.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CorrectAnswer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QuestionText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QuestionText);
      }
      if (QuestionType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(QuestionType);
      }
      if (MaxScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxScore);
      }
      if (PicturePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PicturePath);
      }
      size += answers_.CalculateSize(_repeated_answers_codec);
      if (CorrectAnswer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CorrectAnswer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuestionRequest other) {
      if (other == null) {
        return;
      }
      if (other.QuestionText.Length != 0) {
        QuestionText = other.QuestionText;
      }
      if (other.QuestionType != 0) {
        QuestionType = other.QuestionType;
      }
      if (other.MaxScore != 0) {
        MaxScore = other.MaxScore;
      }
      if (other.PicturePath.Length != 0) {
        PicturePath = other.PicturePath;
      }
      answers_.Add(other.answers_);
      if (other.CorrectAnswer.Length != 0) {
        CorrectAnswer = other.CorrectAnswer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            QuestionText = input.ReadString();
            break;
          }
          case 16: {
            QuestionType = input.ReadInt32();
            break;
          }
          case 24: {
            MaxScore = input.ReadInt32();
            break;
          }
          case 34: {
            PicturePath = input.ReadString();
            break;
          }
          case 42: {
            answers_.AddEntriesFrom(input, _repeated_answers_codec);
            break;
          }
          case 50: {
            CorrectAnswer = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            QuestionText = input.ReadString();
            break;
          }
          case 16: {
            QuestionType = input.ReadInt32();
            break;
          }
          case 24: {
            MaxScore = input.ReadInt32();
            break;
          }
          case 34: {
            PicturePath = input.ReadString();
            break;
          }
          case 42: {
            answers_.AddEntriesFrom(ref input, _repeated_answers_codec);
            break;
          }
          case 50: {
            CorrectAnswer = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreateTestRequest : pb::IMessage<CreateTestRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateTestRequest> _parser = new pb::MessageParser<CreateTestRequest>(() => new CreateTestRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTestRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.CreatenewtestReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTestRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTestRequest(CreateTestRequest other) : this() {
      testName_ = other.testName_;
      questions_ = other.questions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTestRequest Clone() {
      return new CreateTestRequest(this);
    }

    /// <summary>Field number for the "TestName" field.</summary>
    public const int TestNameFieldNumber = 1;
    private string testName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TestName {
      get { return testName_; }
      set {
        testName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "questions" field.</summary>
    public const int QuestionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::ProfTestium_TestService.QuestionRequest> _repeated_questions_codec
        = pb::FieldCodec.ForMessage(18, global::ProfTestium_TestService.QuestionRequest.Parser);
    private readonly pbc::RepeatedField<global::ProfTestium_TestService.QuestionRequest> questions_ = new pbc::RepeatedField<global::ProfTestium_TestService.QuestionRequest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProfTestium_TestService.QuestionRequest> Questions {
      get { return questions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTestRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTestRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TestName != other.TestName) return false;
      if(!questions_.Equals(other.questions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TestName.Length != 0) hash ^= TestName.GetHashCode();
      hash ^= questions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TestName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TestName);
      }
      questions_.WriteTo(output, _repeated_questions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TestName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TestName);
      }
      questions_.WriteTo(ref output, _repeated_questions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TestName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TestName);
      }
      size += questions_.CalculateSize(_repeated_questions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTestRequest other) {
      if (other == null) {
        return;
      }
      if (other.TestName.Length != 0) {
        TestName = other.TestName;
      }
      questions_.Add(other.questions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TestName = input.ReadString();
            break;
          }
          case 18: {
            questions_.AddEntriesFrom(input, _repeated_questions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TestName = input.ReadString();
            break;
          }
          case 18: {
            questions_.AddEntriesFrom(ref input, _repeated_questions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreateTestReply : pb::IMessage<CreateTestReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateTestReply> _parser = new pb::MessageParser<CreateTestReply>(() => new CreateTestReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTestReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.CreatenewtestReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTestReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTestReply(CreateTestReply other) : this() {
      isSuccess_ = other.isSuccess_;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTestReply Clone() {
      return new CreateTestReply(this);
    }

    /// <summary>Field number for the "isSuccess" field.</summary>
    public const int IsSuccessFieldNumber = 1;
    private string isSuccess_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IsSuccess {
      get { return isSuccess_; }
      set {
        isSuccess_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTestReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTestReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsSuccess != other.IsSuccess) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsSuccess.Length != 0) hash ^= IsSuccess.GetHashCode();
      if (Code != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsSuccess.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(IsSuccess);
      }
      if (Code != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsSuccess.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(IsSuccess);
      }
      if (Code != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsSuccess.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IsSuccess);
      }
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTestReply other) {
      if (other == null) {
        return;
      }
      if (other.IsSuccess.Length != 0) {
        IsSuccess = other.IsSuccess;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            IsSuccess = input.ReadString();
            break;
          }
          case 16: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            IsSuccess = input.ReadString();
            break;
          }
          case 16: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeleteTestRequest : pb::IMessage<DeleteTestRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteTestRequest> _parser = new pb::MessageParser<DeleteTestRequest>(() => new DeleteTestRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteTestRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.CreatenewtestReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTestRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTestRequest(DeleteTestRequest other) : this() {
      testID_ = other.testID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTestRequest Clone() {
      return new DeleteTestRequest(this);
    }

    /// <summary>Field number for the "TestID" field.</summary>
    public const int TestIDFieldNumber = 1;
    private int testID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TestID {
      get { return testID_; }
      set {
        testID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteTestRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteTestRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TestID != other.TestID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TestID != 0) hash ^= TestID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TestID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TestID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TestID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TestID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TestID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TestID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteTestRequest other) {
      if (other == null) {
        return;
      }
      if (other.TestID != 0) {
        TestID = other.TestID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TestID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TestID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeleteTestReply : pb::IMessage<DeleteTestReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteTestReply> _parser = new pb::MessageParser<DeleteTestReply>(() => new DeleteTestReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteTestReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProfTestium_TestService.CreatenewtestReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTestReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTestReply(DeleteTestReply other) : this() {
      isSuccess_ = other.isSuccess_;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTestReply Clone() {
      return new DeleteTestReply(this);
    }

    /// <summary>Field number for the "isSuccess" field.</summary>
    public const int IsSuccessFieldNumber = 1;
    private string isSuccess_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IsSuccess {
      get { return isSuccess_; }
      set {
        isSuccess_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteTestReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteTestReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsSuccess != other.IsSuccess) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsSuccess.Length != 0) hash ^= IsSuccess.GetHashCode();
      if (Code != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsSuccess.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(IsSuccess);
      }
      if (Code != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsSuccess.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(IsSuccess);
      }
      if (Code != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsSuccess.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IsSuccess);
      }
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteTestReply other) {
      if (other == null) {
        return;
      }
      if (other.IsSuccess.Length != 0) {
        IsSuccess = other.IsSuccess;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            IsSuccess = input.ReadString();
            break;
          }
          case 16: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            IsSuccess = input.ReadString();
            break;
          }
          case 16: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
